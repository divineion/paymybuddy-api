-- MySQL Script generated by MySQL Workbench
-- Wed Apr 30 17:51:32 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema paymybuddy
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `paymybuddy`;

CREATE SCHEMA IF NOT EXISTS `paymybuddy` DEFAULT CHARACTER SET utf8 ;
USE `paymybuddy` ;

-- -----------------------------------------------------
-- Table `paymybuddy`.`app_user`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `paymybuddy`.`app_user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(50) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `deleted_at` TIMESTAMP NULL DEFAULT NULL,
  `password` VARCHAR(255) NOT NULL,
  `balance` DECIMAL(10,2) UNSIGNED NOT NULL,
  `active_email` VARCHAR(255) GENERATED ALWAYS AS (CASE WHEN deleted_at IS NULL THEN email ELSE NULL END) STORED,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `active_email_UNIQUE` (`active_email` ASC));


-- -----------------------------------------------------
-- Table `paymybuddy`.`transfer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `paymybuddy`.`transfer` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `sender` INT UNSIGNED NOT NULL,
  `receiver` INT UNSIGNED NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `amount` DECIMAL(10,2) UNSIGNED NOT NULL,
  `fees` DECIMAL(10,3) UNSIGNED NOT NULL DEFAULT 0.005,
  `total_amount` DECIMAL(10,2) GENERATED ALWAYS AS (ROUND(amount * (1+fees), 2)) STORED,
  `date` TIMESTAMP NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_transfer_sender_idx` (`sender` ASC),
  INDEX `fk_transfer_receiver_idx` (`receiver` ASC),
  INDEX `total_amount_idx` (`total_amount` ASC),
  CONSTRAINT `fk_transfer_sender`
    FOREIGN KEY (`sender`)
    REFERENCES `paymybuddy`.`app_user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_transfer_receiver`
    FOREIGN KEY (`receiver`)
    REFERENCES `paymybuddy`.`app_user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `paymybuddy`.`user_beneficiary`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `paymybuddy`.`user_beneficiary` (
  `user_id` INT UNSIGNED NOT NULL,
  `beneficiary_id` INT UNSIGNED NOT NULL,
  INDEX `fk_userbeneficiary_user_id_idx` (`user_id` ASC),
  INDEX `fk_userbeneficiary_beneficiary_id_idx` (`beneficiary_id` ASC),
  PRIMARY KEY (`user_id`, `beneficiary_id`),
  CONSTRAINT `fk_userbeneficiary_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `paymybuddy`.`app_user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_userbeneficiary_beneficiary_id`
    FOREIGN KEY (`beneficiary_id`)
    REFERENCES `paymybuddy`.`app_user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `paymybuddy`.`app_user`
-- -----------------------------------------------------
-- -----------------------------------------------------
INSERT INTO `paymybuddy`.`app_user` (`username`, `email`, `deleted_at`, `password`, `balance`) VALUES ('Georgia', 'georgia@email.com', NULL, 'georgia_password', 100.00);
INSERT INTO `paymybuddy`.`app_user` (`username`, `email`, `deleted_at`, `password`, `balance`) VALUES ('Tanka', 'tanka@email.com', NULL, 'tanka_password', 100.00);
INSERT INTO `paymybuddy`.`app_user` (`username`, `email`, `deleted_at`, `password`, `balance`) VALUES ('Bagheera', 'bagheera@email.com', NULL, 'bagheera_password', 100.00);
INSERT INTO `paymybuddy`.`app_user` (`username`, `email`, `deleted_at`, `password`, `balance`) VALUES ('Mania', 'mania@email.com', NULL, 'bagheera_password', 100.00);
INSERT INTO `paymybuddy`.`app_user` (`username`, `email`, `deleted_at`, `password`, `balance`) VALUES ('Jeena', 'jeena@email.com', NULL, 'bagheera_password', 100.00);

-- -----------------------------------------------------
-- Data for table `paymybuddy`.`user_beneficiary`
-- -----------------------------------------------------
INSERT INTO `paymybuddy`.`user_beneficiary` (`user_id`, `beneficiary_id`) VALUES (1, 2);
INSERT INTO `paymybuddy`.`user_beneficiary` (`user_id`, `beneficiary_id`) VALUES (1, 3);
INSERT INTO `paymybuddy`.`user_beneficiary` (`user_id`, `beneficiary_id`) VALUES (3, 4);


-- -----------------------------------------------------
-- Update table `paymybuddy`.`transfer`
-- -----------------------------------------------------

START TRANSACTION;
USE `paymybuddy`;

INSERT INTO `paymybuddy`.`transfer` (`sender`, `receiver`, `description`, `amount`, `date`) 
SELECT 1, 2, 'entr√©e parc aquatique', 18, NOW();

-- -----------------------------------------------------
-- Update app_user (sender) balance after transfer
-- -----------------------------------------------------
UPDATE `paymybuddy`.`app_user` u
SET u.balance = u.balance - 18 * (1 + 0.005)
WHERE u.id = 1;

-- -----------------------------------------------------
-- Update app_user (beneficier) balance after transfer
-- -----------------------------------------------------
UPDATE `paymybuddy`.`app_user` u
SET u.balance = u.balance + 18
WHERE u.id = 2;

COMMIT;